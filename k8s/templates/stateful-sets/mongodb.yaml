apiVersion: apps/v1
kind: StatefulSet
metadata:
  {{- with .Values.mongodb }}
  name: {{ .name}}
spec:
  serviceName: {{ .name }}
  replicas: 1
  selector:
    matchLabels:
      app: {{ .name }}
  template:
    metadata:
      labels:
        app: {{ .name }}
    spec:
      initContainers:
        - name: create-pem-file
          image: {{ .initContainer.image }}
          # The command below concatenates the certificate and private key into a single PEM file.
          command:
            - "/bin/sh"
            - "-c"
            # Use a tmp file to store the concatenated PEM file.
            # Server certificate first and then the private key
            - "cat /etc/ssl/certs/tls.crt /etc/ssl/certs/tls.key > /pem/mongodb.pem"
          volumeMounts:
            - name: cert
              mountPath: "/etc/ssl/certs"
              readOnly: false # Explicitly allowing write access
            - name: pem-dir
              mountPath: "/pem"
      terminationGracePeriodSeconds: {{ .terminationGracePeriodSeconds }}
      containers:
        - name: {{ .name }}
          image: {{ .container.image }}
          ports:
            - containerPort: {{.port }}
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .env.MONGO_INITDB_ROOT_USERNAME.secretKeyRef.name }}
                  key: {{ .env.MONGO_INITDB_ROOT_USERNAME.secretKeyRef.key }}
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .env.MONGO_INITDB_ROOT_PASSWORD.secretKeyRef.name }}
                  key: {{ .env.MONGO_INITDB_ROOT_PASSWORD.secretKeyRef.key }}
          volumeMounts:
            - name: cert
              mountPath: /etc/ssl/certs
              readOnly: true
            - name: pem-dir
              mountPath: "/pem"
              readOnly: true
            - name: {{ .pvc.name}}
              mountPath: /data/mongodb
          args:
            {{- range .container.args }}
            - {{ . }}
            {{- end }}


      volumes:
        - name: cert
          secret:
            # This secret is managed by cert-manager and updated automatically on certificate renewal.
            secretName: {{ .volumes.certSecret }}
        # This volume is used to store the concatenated PEM file across both the init container and the main container.
        - name: pem-dir
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: {{ .pvc.name }}
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: {{ .pvc.storage}}
  {{- end }}
