# Must start with 'databases' key
# This file is subject to change once the operator is brought in
databases:
  name: mongodb
  replicas: 3
  port: 27017
  initContainers:
    - name: create-pem-file
      image: busybox
      command:
        - "/bin/sh"
        - "-c"
        - "cat /etc/ssl/certs/tls.crt /etc/ssl/certs/tls.key > /pem/mongodb.pem"
      volumeMounts:
        - name: cert
          mountPath: "/etc/ssl/certs"
          readOnly: false
        - name: pem-dir
          mountPath: "/pem"
  containers:
    - name: mongodb
      image: mongo:7.0.8
      # TLS Certificate stuff
      args:
        - "--tlsMode=requireTLS"
        - "--tlsCertificateKeyFile=/pem/mongodb.pem"
        - "--setParameter"
        - "tlsUseSystemCA=true" # Allow clients to connect without a certificate
        - "--tlsAllowConnectionsWithoutCertificates"
      volumeMounts:
        - name: mongodb-data
          mountPath: /data/mongodb
        - name: cert
          mountPath: /etc/ssl/certs
          readOnly: true
        - name: pem-dir
          mountPath: "/pem"
          readOnly: true
      command:
        - "mongod"
        - "--replSet"    
        - "rs0"   
        - "--bind_ip_all"    
      # If using a single replica, you can leave the env here
      # And it will be initialized on that one pod and created. If not, you have to manually create the admin user
      env:
        MONGO_INITDB_ROOT_USERNAME:
          secretKeyRef:
            name: mongodb-init-secret
            key: MONGO_INITDB_ROOT_USERNAME
        MONGO_INITDB_ROOT_PASSWORD:
          secretKeyRef:
            name: mongodb-init-secret
            key: MONGO_INITDB_ROOT_PASSWORD
  volumes:
    - name: cert
      secret:
        secretName: mongodb-tls-secret
    - name: pem-dir
      emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: mongodb-data
      spec:
        resources:
          requests:
            # On a VPS this won't do much,
            # you'll have access to the entire disk
            storage: 10Gi
